using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Navigation;
using System.IO;
using SoulsFormats;


namespace DemonSoulsItemRandomiser
{
    /// <summary>
    /// Interaction logic for MainWindow.xaml
    /// </summary>
    public partial class MainWindow : Window
    {
        string pathToParamDataFile = Directory.GetCurrentDirectory() + @"\Data\gameparamna.parambnd.dcx";
        string pathToParamDef = Directory.GetCurrentDirectory() + @"\Data\paramdef\paramdef.paramdefbnd.dcx";

        public MainWindow()
        {
            InitializeComponent();

            // Reading an original paramdefbnd
            var paramdefs = new Dictionary<string, PARAMDEF>();
            var paramdefbnd = BND3.Read(pathToParamDef);

            List<long> forbiddenItemLotIds = new List<long>
            {
                0,1,2,16244,16456,16457,16652,16657,310022,60,70,80,200,280,290,300,320,10100,10169,10170,10171,10172,10173,10174,10175,10176,10177,10178,10179,10180,10181,10182,10183,10184,10185,10195,10196,10197,10198,
                10199,10223,10250,10251,10252,10253,10254,10255,10256,10257,10258,10259,10270,10271,10272,10273,10274,10275,10276,10277,10279,10281,10415,10416,10417,10418,10440,10441,10442,10443,10456,10457,10458,10459,
                10470,10471,10472,10473,10474,10475,10476,10477,10478,10480,10481,10490,10519,10530,10531,10532,10533,10535,10540,10542,10570,10571,10572,10573,10574,10575,10576,10577,10578,10579,10580,10581,10651,10652,
                10653,10654,10655,10656,10657,10658,10659,10660,10670,10672,10673,10674,10675,10676,10677,10678,10680,10681,10715,10870,10871,10872,10873,10951,10970,10971,10972,10973,15056,15062,15069,15070,15071,15072,
                15073,15074,15075,15076,15077,15078,15079,15084,15085,15086,15090,15091,15099,15100,15101,15102,15103,15200,15201,15202,15203,15300,15301,15302,15303,15400,15401,15521,15522,15523,15524,15525,15526,15531,
                15532,15533,15534,15535,15536,15702,16206,16207,16208,16209,16210,16211,16212,16213,16214,16215,16216,16217,16219,16220,16221,16456,16457,16447,16448,16449,16450,16451,16452,16453,16454,16455,16456,16457,
                16458,16459,16460,16461,16550,16551,16553,16555,16556,16557,16565,16571,16572,16600,16602,16603,16604,16605,16606,16607,16608,16609,16610,16611,16612,16613,16615,16618,16619,16620,16621,16622,16623,16624,
                16625,16626,16627,16628,16629,16641,16673,16674,16675,16676,16677,16678,16679,16680,16681,16682,16683,16684,16685,16686,16687,16688,16689,100000,100001,220040,230040,310022,310027,310062,320022,320027,
                320030,320050,320051,320052,320055,320056,320057,320122,320127,400021,400051,400090,410060,410071,500002,500012,500052,500062,510002,510012,510020,510041,510050,520002,520011,520012,610002,610003,610022,
                610040,610041,610052,610072,610073,610082,620003,620004,620031,620054,620062,620063,620072,620073,630054,900003,900004,900005,900011,900016,900017,900021,900022,900023,900027,900028,900029,900039,900040,
                900041,900046,900047,
                210000,210001,210005,210006,210010,210011,210020,210021,210030,210031,210040,210041,210045,210046,210050,210051,210060,210061,210065,210066,210070,210071,210075,210076,210080,210081,210085,210086,210090,
                210091,210092,220000,220001,220010,220011,220020,220021,220025,220026,220030,220031,220040,220045,220046,220050,220051,220055,220056,220060,220061,220065,220066,220070,220071,220080,220081,220090,220091,220100,
                220101,230000,230001,230010,230011,230020,230021,230025,230026,230030,230031,230040,230050,230051,230055,230056,230060,230061,230065,230066,230070,230071,230072,230080,230081,230090,230091,230095,230096,230100,
                230101,230110,230111,240000,240001,240010,240011,240020,240021,240025,240026,240030,240031,240100,240101,240110,240111,240040,240041,240045,240046,240050,240051,240055,240056,240060,240061,240070,240071,240080,
                240081,240082,240090,240091,310000,310001,310005,310006,310010,310011,310015,310016,310020,310021,310022,310025,310026,310027,310030,310050,310051,310060,310061,310062,310070,320000,320001,320010,320011,320020,
                320021,320022,320025,320026,320027,320030,320050,320051,320052,320055,320056,320057,320070,320071,320090,320091,320100,320101,320110,320120,320121,320122,320125,320126,320127,330000,330010,330011,400000,400001,
                400010,400011,400020,400021,400030,400031,400032,400033,400034,400040,400041,400050,400051,400060,400070,400071,400080,400090,410000,410001,410010,410011,410020,410030,410031,410040,410041,410050,410051,410060,
                410070,410071,410080,410090,420000,420001,420010,500000,500001,500002,500010,500011,500012,500020,500030,500040,500041,500050,500051,500052,500060,500061,500062,500070,500071,510000,510001,510002,510010,510011,
                510012,510020,510021,510022,510023,510030,510031,510032,510040,510041,510050,510051,510052,510053,510054,510060,510070,510071,510080,510081,510082,510090,510091,510092,510100,510101,510110,510111,510120,510121,
                510130,510131,520000,520001,520002,520010,520011,520012,520030,520031,520040,610000,610001,610002,610003,610010,610011,610012,610013,610020,610021,610022,610030,610031,610032,610040,610041,610050,610051,610052,
                610053,610054,610055,610056,610057,610060,610061,610062,610063,610070,610071,610072,610073,610080,610081,610082,610090,610100,610101,620000,620001,620002,620003,620004,620010,620011,620012,620013,620020,620021,
                620030,620031,620040,620041,620050,620051,620052,620053,620054,620060,620061,620062,620063,620070,620071,620072,620073,620080,620090,620100,620110,630050,630051,630052,630053,630054,810000,810001,810002,900000,
                900001,900002,900003,900004,900005,900006,900007,900008,900009,900010,900011,900012,900013,900014,900015,900016,900017,900018,900019,900020,900021,900022,900023,900024,900025,900026,900027,900028,900029,900030,
                900031,900032,900033,900034,900035,900036,900037,900038,900039,900040,900041,900042,900043,900044,900045,900046,900047
            };

            List<long> enemyDropTableLotIds = new List<long>
            {
                210000,210001,210005,210006,210010,210011,210020,210021,210030,210031,210040,210041,210045,210046,210050,210051,210060,210061,210065,210066,210070,210071,210075,210076,210080,210081,210085,210086,210090,
                210091,210092,220000,220001,220010,220011,220020,220021,220025,220026,220030,220031,220040,220045,220046,220050,220051,220055,220056,220060,220061,220065,220066,220070,220071,220080,220081,220090,220091,220100,
                220101,230000,230001,230010,230011,230020,230021,230025,230026,230030,230031,230040,230050,230051,230055,230056,230060,230061,230065,230066,230070,230071,230072,230080,230081,230090,230091,230095,230096,230100,
                230101,230110,230111,240000,240001,240010,240011,240020,240021,240025,240026,240030,240031,240100,240101,240110,240111,240040,240041,240045,240046,240050,240051,240055,240056,240060,240061,240070,240071,240080,
                240081,240082,240090,240091,310000,310001,310005,310006,310010,310011,310015,310016,310020,310021,310022,310025,310026,310027,310030,310050,310051,310060,310061,310062,310070,320000,320001,320010,320011,320020,
                320021,320022,320025,320026,320027,320030,320050,320051,320052,320055,320056,320057,320070,320071,320090,320091,320100,320101,320110,320120,320121,320122,320125,320126,320127,330000,330010,330011,400000,400001,
                400010,400011,400020,400021,400030,400031,400032,400033,400034,400040,400041,400050,400051,400060,400070,400071,400080,400090,410000,410001,410010,410011,410020,410030,410031,410040,410041,410050,410051,410060,
                410070,410071,410080,410090,420000,420001,420010,500000,500001,500002,500010,500011,500012,500020,500030,500040,500041,500050,500051,500052,500060,500061,500062,500070,500071,510000,510001,510002,510010,510011,
                510012,510020,510021,510022,510023,510030,510031,510032,510040,510041,510050,510051,510052,510053,510054,510060,510070,510071,510080,510081,510082,510090,510091,510092,510100,510101,510110,510111,510120,510121,
                510130,510131,520000,520001,520002,520010,520011,520012,520030,520031,520040,610000,610001,610002,610003,610010,610011,610012,610013,610020,610021,610022,610030,610031,610032,610040,610041,610050,610051,610052,
                610053,610054,610055,610056,610057,610060,610061,610062,610063,610070,610071,610072,610073,610080,610081,610082,610090,610100,610101,620000,620001,620002,620003,620004,620010,620011,620012,620013,620020,620021,
                620030,620031,620040,620041,620050,620051,620052,620053,620054,620060,620061,620062,620063,620070,620071,620072,620073,620080,620090,620100,620110,630050,630051,630052,630053,630054,810000,810001,810002,900000,
                900001,900002,900003,900004,900005,900006,900007,900008,900009,900010,900011,900012,900013,900014,900015,900016,900017,900018,900019,900020,900021,900022,900023,900024,900025,900026,900027,900028,900029,900030,
                900031,900032,900033,900034,900035,900036,900037,900038,900039,900040,900041,900042,900043,900044,900045,900046,900047
            };

            foreach (BinderFile file in paramdefbnd.Files)
            {
                var paramdef = PARAMDEF.Read(file.Bytes);
                paramdefs[paramdef.ParamType] = paramdef;
            }

            var parms = new Dictionary<string, PARAM>();
            var parambnd = BND3.Read(pathToParamDataFile);

            foreach (BinderFile file in parambnd.Files)
            {
                string name = Path.GetFileNameWithoutExtension(file.Name);
                var param = PARAM.Read(file.Bytes);
                param.ApplyParamdef(paramdefs[param.ParamType]);
                parms[name] = param;
            }

            PARAM weapons = parms["EquipParamWeapon"];
            PARAM armor = parms["EquipParamProtector"];
            PARAM rings = parms["EquipParamAccessory"];
            PARAM consumables = parms["EquipParamGoods"];
            PARAM itemLots = parms["ItemLotParam"];

            Random rng = new Random();

            //You need to also bring the item category otherwise only consumeables will work
            foreach(var item in itemLots.Rows)
            {
                if(!forbiddenItemLotIds.Contains(item.ID))
                {
                    PARAM.Row rowToSwapWith = itemLots.Rows[rng.Next(itemLots.Rows.Count)];

                    if(forbiddenItemLotIds.Contains(rowToSwapWith.ID))
                    {
                        bool validRowFound = false;

                        while(validRowFound == false)
                        {
                            rowToSwapWith = itemLots.Rows[rng.Next(itemLots.Rows.Count)];
                            var rowToSwapWithId = rowToSwapWith["lotItemId01"].Value;
                            var rowToSwapWithCategory = rowToSwapWith["lotItemCategory01"].Value;
                            if (!forbiddenItemLotIds.Contains(rowToSwapWith.ID) && Convert.ToInt64(rowToSwapWithId) != 0 && Convert.ToInt64(rowToSwapWithCategory) != -1) validRowFound = true;
                        }
                    }

                    if(!forbiddenItemLotIds.Contains(rowToSwapWith.ID) && Convert.ToInt64(item["lotItemId01"].Value) != 0 && Convert.ToInt64(item["lotItemCategory01"].Value) != -1)
                    {
                        var rowToSwapWithIdTemp = rowToSwapWith["lotItemId01"].Value;
                        var rowToSwapWithCategoryTemp = rowToSwapWith["lotItemCategory01"].Value;

                        var originalRowTemp = item["lotItemId01"].Value;
                        var originalRowCategoryTemp = item["lotItemCategory01"].Value;

                        item["lotItemId01"].Value = rowToSwapWithIdTemp;
                        item["lotItemCategory01"].Value = rowToSwapWithCategoryTemp;

                        rowToSwapWith["lotItemId01"].Value = originalRowTemp;
                        rowToSwapWith["lotItemCategory01"].Value = originalRowCategoryTemp;
                    }
                }
            }


            foreach (BinderFile file in parambnd.Files)
            {
                string name = Path.GetFileNameWithoutExtension(file.Name);
                file.Bytes = parms[name].Write();
            }
            parambnd.Write(pathToParamDataFile);
        }
    }
}
